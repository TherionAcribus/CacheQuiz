"""
Script pour r√©initialiser compl√®tement la base de donn√©es
"""
from app import app
from models import db, Question, BroadTheme
import os

def reset_database():
    """Supprimer et recr√©er compl√®tement la base de donn√©es"""

    print("=" * 70)
    print("[RESET] REINITIALISATION COMPLETE DE LA BASE DE DONNEES")
    print("=" * 70)

    # Supprimer le fichier de base de donn√©es s'il existe
    db_file = 'geocaching_quiz.db'
    if os.path.exists(db_file):
        print(f"[SUPPRESSION] Suppression de {db_file}")
        os.remove(db_file)
    else:
        print(f"[INFO] {db_file} n'existe pas")

    with app.app_context():
        print("\n[CREATION] Creation des tables...")

        # Cr√©er toutes les tables avec le nouveau sch√©ma
        db.create_all()
        print("[OK] Tables creees")

        # Cr√©er les th√®mes par d√©faut
        print("\n[THEMES] Creation des themes par defaut...")
        sample_themes = [
            {
                'name': 'R√®gles',
                'description': 'Questions sur les r√®gles officielles du g√©ocaching',
                'language': 'fr',
                'icon': 'üìñ',
                'color': '#3b82f6'
            },
            {
                'name': 'Terminologie',
                'description': 'Acronymes et termes sp√©cifiques au g√©ocaching',
                'language': 'fr',
                'icon': 'üí¨',
                'color': '#8b5cf6'
            },
            {
                'name': 'Types de caches',
                'description': 'Questions sur les diff√©rents types de geocaches',
                'language': 'fr',
                'icon': 'üì¶',
                'color': '#ec4899'
            },
            {
                'name': 'Histoire',
                'description': 'Histoire et √©volution du g√©ocaching',
                'language': 'fr',
                'icon': 'üï∞Ô∏è',
                'color': '#f59e0b'
            },
            {
                'name': 'Technique',
                'description': 'GPS, navigation, coordonn√©es',
                'language': 'fr',
                'icon': '‚öôÔ∏è',
                'color': '#10b981'
            },
            {
                'name': 'Communaut√©',
                'description': 'Events, m√©ga-events, culture du g√©ocaching',
                'language': 'fr',
                'icon': 'üë•',
                'color': '#06b6d4'
            }
        ]

        themes = {}
        for theme_data in sample_themes:
            theme = BroadTheme(**theme_data)
            db.session.add(theme)
            db.session.flush()
            themes[theme_data['name']] = theme.id
            print(f"   [CREE] {theme_data['name']} (ID: {theme.id})")

        db.session.commit()
        print(f"[OK] {len(sample_themes)} themes crees")

        # Cr√©er des questions d'exemple
        print("\n[QUESTIONS] Creation des questions d'exemple...")
        sample_questions = [
            {
                'author': 'Admin',
                'question_text': "Quelle est la taille d'un cache 'Micro'?",
                'possible_answers': "Plus petit qu'un film 35mm|||De la taille d'un film 35mm|||Entre un film 35mm et une bo√Æte √† chaussures|||Plus grand qu'une bo√Æte √† chaussures",
                'answer_images': "|||",
                'correct_answer': '2',
                'detailed_answer': "Un cache Micro est de la taille approximative d'un film 35mm. C'est l'une des plus petites tailles de geocaches.",
                'hint': "Pensez √† un objet photo ancien",
                'broad_theme_id': themes['R√®gles'],
                'specific_theme': 'Tailles de caches',
                'country': None,
                'difficulty_level': 1,
                'is_published': True
            },
            {
                'author': 'Admin',
                'question_text': "Qu'est-ce qu'un 'FTF' en g√©ocaching?",
                'possible_answers': "First To Find (Premier √† trouver)|||Fast To Find (Rapide √† trouver)|||Far To Find (Loin √† trouver)|||Failed To Find (√âchec de recherche)",
                'answer_images': "|||",
                'correct_answer': '1',
                'detailed_answer': "FTF signifie 'First To Find', c'est-√†-dire √™tre la premi√®re personne √† trouver une cache apr√®s sa publication. C'est un honneur recherch√© par de nombreux g√©ocacheurs!",
                'hint': "C'est un honneur pour les g√©ocacheurs comp√©titifs",
                'broad_theme_id': themes['Terminologie'],
                'specific_theme': 'Acronymes',
                'country': None,
                'difficulty_level': 1,
                'is_published': True
            },
            {
                'author': 'Admin',
                'question_text': "Quel type de cache n√©cessite de r√©soudre une √©nigme avant de conna√Ætre les coordonn√©es?",
                'possible_answers': "Traditional Cache|||Multi-Cache|||Mystery Cache|||EarthCache",
                'answer_images': "|||",
                'correct_answer': '3',
                'detailed_answer': "Un Mystery Cache (ou Unknown Cache) n√©cessite de r√©soudre une √©nigme ou un puzzle pour obtenir les coordonn√©es finales. Les coordonn√©es publi√©es ne sont qu'un point de r√©f√©rence.",
                'hint': "Le nom contient le mot 'myst√®re'",
                'broad_theme_id': themes['Types de caches'],
                'specific_theme': 'Mystery Cache',
                'country': None,
                'difficulty_level': 2,
                'is_published': True
            }
        ]

        for q_data in sample_questions:
            question = Question(**q_data)
            db.session.add(question)
            print(f"   [CREE] Question: {q_data['question_text'][:50]}...")

        db.session.commit()
        print(f"[OK] {len(sample_questions)} questions crees")

        print("\n" + "=" * 70)
        print("[SUCCES] REINITIALISATION TERMINEE !")
        print("=" * 70)
        print("\n[INSTRUCTIONS] :")
        print("   Lancez maintenant : python app.py")
        print("   Puis allez sur : http://localhost:5000")
        print("   Et explorez la nouvelle section 'Themes' !")

if __name__ == '__main__':
    reset_database()
